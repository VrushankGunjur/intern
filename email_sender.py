import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import os
from datetime import datetime


def send_startup_idea_email(idea_data: dict) -> bool:
    """
    Send a formatted email with startup idea details.

    Args:
        idea_data: Dictionary containing:
            - title: str
            - justification: str
            - market_size: str
            - icp: str (Ideal Customer Profile)
            - value_proposition: str
            - core_problem: str
            - competitive_landscape: str (optional)
            - citations: list of dicts with 'url' and 'title' (optional)

    Returns:
        bool: True if email sent successfully, False otherwise
    """
    gmail_user = os.getenv('GMAIL_USER')
    gmail_app_password = os.getenv('GMAIL_APP_PASSWORD')
    recipient = os.getenv('RECIPIENT_EMAIL', 'team@heysanctum.com')

    if not gmail_user or not gmail_app_password:
        raise ValueError("Gmail credentials not set in environment variables")

    # Create message
    msg = MIMEMultipart('alternative')
    msg['Subject'] = f"New Startup Idea: {idea_data['title']}"
    msg['From'] = gmail_user
    msg['To'] = recipient

    # Create HTML email body
    html = f"""
    <html>
        <head>
            <style>
                body {{ font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; }}
                .container {{ max-width: 700px; margin: 0 auto; padding: 20px; }}
                .header {{ background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; border-radius: 10px 10px 0 0; }}
                .header h1 {{ margin: 0; font-size: 28px; }}
                .content {{ background: #f9fafb; padding: 30px; border-radius: 0 0 10px 10px; }}
                .section {{ background: white; padding: 20px; margin-bottom: 20px; border-radius: 8px; border-left: 4px solid #667eea; }}
                .section h2 {{ margin-top: 0; color: #667eea; font-size: 18px; }}
                .section p {{ margin: 0; }}
                .label {{ font-weight: 600; color: #555; margin-bottom: 5px; }}
                .footer {{ text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; color: #888; font-size: 12px; }}
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>{idea_data['title']}</h1>
                    <p style="margin: 10px 0 0 0; opacity: 0.9;">Generated on {datetime.now().strftime('%B %d, %Y at %I:%M %p')}</p>
                </div>

                <div class="content">
                    <div class="section">
                        <h2>Core Problem</h2>
                        <p>{idea_data['core_problem']}</p>
                    </div>

                    <div class="section">
                        <h2>Value Proposition</h2>
                        <p>{idea_data['value_proposition']}</p>
                    </div>

                    <div class="section">
                        <h2>Market Size (TAM)</h2>
                        <p>{idea_data['market_size']}</p>
                    </div>

                    <div class="section">
                        <h2>Ideal Customer Profile</h2>
                        <p>{idea_data['icp']}</p>
                    </div>

                    <div class="section">
                        <h2>Justification</h2>
                        <p>{idea_data['justification']}</p>
                    </div>

                    {f'''<div class="section">
                        <h2>Competitive Landscape</h2>
                        <p>{idea_data.get('competitive_landscape', 'N/A')}</p>
                    </div>''' if idea_data.get('competitive_landscape') else ''}

                    {f'''<div class="section">
                        <h2>Sources</h2>
                        <ul style="margin: 0; padding-left: 20px;">
                            {''.join([f'<li><a href="{citation["url"]}" style="color: #667eea; text-decoration: none;">{citation["title"]}</a></li>' for citation in idea_data.get('citations', [])])}
                        </ul>
                    </div>''' if idea_data.get('citations') else ''}

                    <div class="footer">
                        <p>Autonomously generated by your startup idea agent</p>
                    </div>
                </div>
            </div>
        </body>
    </html>
    """

    # Attach HTML
    msg.attach(MIMEText(html, 'html'))

    try:
        # Send email via Gmail SMTP
        with smtplib.SMTP_SSL('smtp.gmail.com', 465) as server:
            server.login(gmail_user, gmail_app_password)
            server.send_message(msg)

        print(f"[EMAIL] Successfully sent: {idea_data['title']}")
        return True

    except Exception as e:
        print(f"[ERROR] Failed to send email: {e}")
        return False


if __name__ == "__main__":
    # Test email functionality
    from dotenv import load_dotenv
    load_dotenv()

    test_idea = {
        "title": "AI-Powered Code Review Platform",
        "core_problem": "Engineering teams waste 20-30% of their time on manual code reviews, leading to slower deployment cycles and inconsistent code quality standards.",
        "value_proposition": "Automated, AI-driven code review that catches bugs, security vulnerabilities, and style issues instantly, while learning your team's specific patterns and preferences.",
        "market_size": "$15B+ TAM - Software development tools market growing at 20% YoY with 26M+ developers globally",
        "icp": "Engineering teams at Series A-C startups (50-500 engineers) using GitHub/GitLab, particularly in fintech, healthcare, and SaaS where code quality is critical",
        "justification": "Recent AI advances make this viable now; GitHub Copilot proves developers trust AI tools; TAM is massive and growing; clear ROI story (save 10+ hours/week per engineer)",
        "competitive_landscape": "GitHub Advanced Security ($21/user), SonarQube (legacy, slow), DeepCode (acquired by Snyk) - opportunity for modern, AI-native solution"
    }

    send_startup_idea_email(test_idea)
